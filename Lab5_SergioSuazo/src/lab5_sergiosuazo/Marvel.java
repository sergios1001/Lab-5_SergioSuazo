/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab5_sergiosuazo;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Sergio
 */
public class Marvel extends javax.swing.JFrame {

    /**
     * Creates new form Marvel
     */
    public Marvel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd_Interfaz = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        jl_heroes = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jl_villano = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jt_marvel = new javax.swing.JTree();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jd_Crear = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tf_nombre = new javax.swing.JTextField();
        tf_origen = new javax.swing.JTextField();
        sp_edad = new javax.swing.JSpinner();
        sp_altura = new javax.swing.JSpinner();
        cb_tipo = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jd_Superpoder = new javax.swing.JDialog();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        sp_nivel = new javax.swing.JSpinner();
        rb_Si = new javax.swing.JRadioButton();
        rb_No = new javax.swing.JRadioButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ta_descripcion = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jd_AsignarSuper = new javax.swing.JDialog();
        jScrollPane5 = new javax.swing.JScrollPane();
        jl_personajes = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jl_superpoderes = new javax.swing.JList<>();
        jButton6 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jd_AsignarH = new javax.swing.JDialog();
        jScrollPane7 = new javax.swing.JScrollPane();
        jl_heroesA = new javax.swing.JList<>();
        cb_grupoH = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        jd_AsignarV = new javax.swing.JDialog();
        jScrollPane8 = new javax.swing.JScrollPane();
        jl_VillanosA = new javax.swing.JList<>();
        cb_grupoV = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();
        jd_Carcel = new javax.swing.JDialog();
        jScrollPane9 = new javax.swing.JScrollPane();
        jl_carcel = new javax.swing.JList<>();
        jButton9 = new javax.swing.JButton();
        mortal = new javax.swing.ButtonGroup();
        popup_heroes = new javax.swing.JPopupMenu();
        jmi_agregar = new javax.swing.JMenuItem();
        jmi_eliminar = new javax.swing.JMenuItem();
        popup_villanos = new javax.swing.JPopupMenu();
        jmi_agregarV = new javax.swing.JMenuItem();
        jmi_eliminarV = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tf_user = new javax.swing.JTextField();
        pf_contra = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jl_heroes.setModel(new DefaultListModel());
        jl_heroes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_heroesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jl_heroes);

        jl_villano.setModel(new DefaultListModel());
        jl_villano.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jl_villanoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jl_villano);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Marvel");
        jt_marvel.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane3.setViewportView(jt_marvel);

        jLabel4.setText("Heroes");

        jLabel5.setText("Villanos");

        jButton2.setText("Enviar a la Carcel");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Llenar/Limpiar arbol");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jMenu1.setText("Opciones");

        jMenuItem1.setText("Crear Heroe/Villano");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Crear Superpoder");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Dar Superpoder");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenu3.setText("Asignar");

        jMenuItem4.setText("Heroe");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Villano");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ver Carcel");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jd_Interfaz.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout jd_InterfazLayout = new javax.swing.GroupLayout(jd_Interfaz.getContentPane());
        jd_Interfaz.getContentPane().setLayout(jd_InterfazLayout);
        jd_InterfazLayout.setHorizontalGroup(
            jd_InterfazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_InterfazLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jd_InterfazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jd_InterfazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_InterfazLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jd_InterfazLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addGroup(jd_InterfazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3))
                        .addGap(51, 51, 51))))
            .addGroup(jd_InterfazLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jd_InterfazLayout.setVerticalGroup(
            jd_InterfazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_InterfazLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jd_InterfazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_InterfazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_InterfazLayout.createSequentialGroup()
                        .addGroup(jd_InterfazLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(jd_InterfazLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jLabel6.setText("Nombre:");

        jLabel7.setText("Edad:");

        jLabel8.setText("Altura:");

        jLabel9.setText("Planeta de Origen: ");

        jLabel10.setText("Tipo:");

        cb_tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Heroe", "Villano" }));

        jButton4.setText("Crear");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_CrearLayout = new javax.swing.GroupLayout(jd_Crear.getContentPane());
        jd_Crear.getContentPane().setLayout(jd_CrearLayout);
        jd_CrearLayout.setHorizontalGroup(
            jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearLayout.createSequentialGroup()
                .addGroup(jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_CrearLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_CrearLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jd_CrearLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(sp_edad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jd_CrearLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(cb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jd_CrearLayout.createSequentialGroup()
                                .addGroup(jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jd_CrearLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(sp_altura))
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addComponent(tf_origen, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jd_CrearLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(jButton4)))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jd_CrearLayout.setVerticalGroup(
            jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CrearLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sp_edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(sp_altura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tf_origen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cb_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jLabel11.setText("Nivel de poder:");

        jLabel12.setText("Descripcion:");

        jLabel13.setText("Mortal:");

        mortal.add(rb_Si);
        rb_Si.setText("S");

        mortal.add(rb_No);
        rb_No.setText("N");

        ta_descripcion.setColumns(20);
        ta_descripcion.setRows(5);
        jScrollPane4.setViewportView(ta_descripcion);

        jButton5.setText("Crear");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_SuperpoderLayout = new javax.swing.GroupLayout(jd_Superpoder.getContentPane());
        jd_Superpoder.getContentPane().setLayout(jd_SuperpoderLayout);
        jd_SuperpoderLayout.setHorizontalGroup(
            jd_SuperpoderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_SuperpoderLayout.createSequentialGroup()
                .addGroup(jd_SuperpoderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_SuperpoderLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jd_SuperpoderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jd_SuperpoderLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(sp_nivel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jd_SuperpoderLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jd_SuperpoderLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(rb_Si)
                                .addGap(18, 18, 18)
                                .addComponent(rb_No))))
                    .addGroup(jd_SuperpoderLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jButton5)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jd_SuperpoderLayout.setVerticalGroup(
            jd_SuperpoderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_SuperpoderLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jd_SuperpoderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(sp_nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_SuperpoderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(rb_Si)
                    .addComponent(rb_No))
                .addGap(18, 18, 18)
                .addGroup(jd_SuperpoderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jl_personajes.setModel(new DefaultListModel());
        jScrollPane5.setViewportView(jl_personajes);

        jl_superpoderes.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(jl_superpoderes);

        jButton6.setText("Dar Superpoder");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jLabel14.setText("Personajes");

        jLabel15.setText("Poderes");

        javax.swing.GroupLayout jd_AsignarSuperLayout = new javax.swing.GroupLayout(jd_AsignarSuper.getContentPane());
        jd_AsignarSuper.getContentPane().setLayout(jd_AsignarSuperLayout);
        jd_AsignarSuperLayout.setHorizontalGroup(
            jd_AsignarSuperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_AsignarSuperLayout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jd_AsignarSuperLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jd_AsignarSuperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(jd_AsignarSuperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(53, 53, 53))
        );
        jd_AsignarSuperLayout.setVerticalGroup(
            jd_AsignarSuperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_AsignarSuperLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jd_AsignarSuperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jd_AsignarSuperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jl_heroesA.setModel(new DefaultListModel());
        jScrollPane7.setViewportView(jl_heroesA);

        cb_grupoH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Avengers", "Xmen" }));

        jButton7.setText("Agregar al grupo");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_AsignarHLayout = new javax.swing.GroupLayout(jd_AsignarH.getContentPane());
        jd_AsignarH.getContentPane().setLayout(jd_AsignarHLayout);
        jd_AsignarHLayout.setHorizontalGroup(
            jd_AsignarHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_AsignarHLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jd_AsignarHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_grupoH, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addGap(47, 47, 47))
        );
        jd_AsignarHLayout.setVerticalGroup(
            jd_AsignarHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_AsignarHLayout.createSequentialGroup()
                .addGroup(jd_AsignarHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_AsignarHLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_AsignarHLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(cb_grupoH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton7)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jl_VillanosA.setModel(new DefaultListModel());
        jScrollPane8.setViewportView(jl_VillanosA);

        cb_grupoV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dark Avengers", "Sinister Six" }));

        jButton8.setText("Agregar al Grupo");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_AsignarVLayout = new javax.swing.GroupLayout(jd_AsignarV.getContentPane());
        jd_AsignarV.getContentPane().setLayout(jd_AsignarVLayout);
        jd_AsignarVLayout.setHorizontalGroup(
            jd_AsignarVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_AsignarVLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(jd_AsignarVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cb_grupoV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jd_AsignarVLayout.setVerticalGroup(
            jd_AsignarVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_AsignarVLayout.createSequentialGroup()
                .addGroup(jd_AsignarVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_AsignarVLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_AsignarVLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(cb_grupoV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jButton8)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jl_carcel.setModel(new DefaultListModel());
        jScrollPane9.setViewportView(jl_carcel);

        jButton9.setText("Escapar");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jd_CarcelLayout = new javax.swing.GroupLayout(jd_Carcel.getContentPane());
        jd_Carcel.getContentPane().setLayout(jd_CarcelLayout);
        jd_CarcelLayout.setHorizontalGroup(
            jd_CarcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CarcelLayout.createSequentialGroup()
                .addGroup(jd_CarcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_CarcelLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jd_CarcelLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jButton9)))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jd_CarcelLayout.setVerticalGroup(
            jd_CarcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_CarcelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jmi_agregar.setText("Agregar");
        jmi_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_agregarActionPerformed(evt);
            }
        });
        popup_heroes.add(jmi_agregar);

        jmi_eliminar.setText("Eliminar");
        jmi_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarActionPerformed(evt);
            }
        });
        popup_heroes.add(jmi_eliminar);

        jmi_agregarV.setText("Agregar");
        jmi_agregarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_agregarVActionPerformed(evt);
            }
        });
        popup_villanos.add(jmi_agregarV);

        jmi_eliminarV.setText("Eliminar");
        jmi_eliminarV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_eliminarVActionPerformed(evt);
            }
        });
        popup_villanos.add(jmi_eliminarV);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Usuario:");

        jLabel2.setText("Contraseña:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("LOG IN");

        jButton1.setText("Ingresar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35)
                                .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pf_contra))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jButton1)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pf_contra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        jd_Crear.setVisible(true);
        jd_Crear.pack();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if(tf_user.getText().equals(user)&&pf_contra.getText().equals(pass))
        {
            jd_Interfaz.setVisible(true);
            jd_Interfaz.pack();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Usuario o contraseña incorrectos");
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        jd_Superpoder.setVisible(true);
        jd_Superpoder.pack();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        jd_AsignarSuper.setVisible(true);
        jd_AsignarSuper.pack();
        DefaultListModel m=new DefaultListModel();
        for (int i = 0; i < heroes.size(); i++) {
            m.addElement(heroes.get(i));
        }
        for (int i = 0; i < villanos.size(); i++) {
            m.addElement(villanos.get(i));
        }
        jl_personajes.setModel(m);
        DefaultListModel mod =new DefaultListModel();
        for (int i = 0; i < superpoderes.size(); i++) {
            mod.addElement(superpoderes.get(i));
        }
        jl_superpoderes.setModel(mod);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        jd_AsignarH.setVisible(true);
        jd_AsignarH.pack();
        DefaultListModel m=new DefaultListModel();
        for (int i = 0; i < heroes.size(); i++) {
            if(heroes.get(i).getSuperpoderes().size()>=1)
            {
               m.addElement(heroes.get(i)); 
            } 
        }
        jl_heroesA.setModel(m);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        jd_AsignarV.setVisible(true);
        jd_AsignarV.pack();
        DefaultListModel m=new DefaultListModel();
        for (int i = 0; i < villanos.size(); i++) {
            if(villanos.get(i).getSuperpoderes().size()>=2)
            {
               m.addElement(villanos.get(i)); 
            } 
        }
        jl_VillanosA.setModel(m);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
        jd_Carcel.setVisible(true);
        jd_Carcel.pack();
        DefaultListModel m=new DefaultListModel();
        for (int i = 0; i < darkAvengers.size(); i++) {
            if(darkAvengers.get(i).isCarcel())
            {
                m.addElement(darkAvengers.get(i));
            }
            
        }
        for (int i = 0; i < sinister.size(); i++) {
            if(sinister.get(i).isCarcel())
            {
                m.addElement(sinister.get(i));
            }
        }
        jl_carcel.setModel(m);
        
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        try {
            if(cb_tipo.getSelectedItem().toString().equals("Heroe"))
            {
                Heroe h = new Heroe(tf_nombre.getText(), tf_origen.getText(), (int)sp_edad.getValue(), (int)sp_altura.getValue(), 0);
                heroes.add(h);
            }
            else
            {
                Villano v = new Villano(tf_nombre.getText(), tf_origen.getText(), (int)sp_edad.getValue(), (int)sp_altura.getValue(), 0,false);
                villanos.add(v);
            }
            JOptionPane.showMessageDialog(this, "Se creo el personaje exitosamente");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Hubo un error al momento de la creacion");
        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        try {
            boolean flag;
            if(rb_Si.isSelected())
            {
                flag=true;
            }
            else
            {
                flag=false;
            }
            Superpoder s = new Superpoder((int)sp_nivel.getValue(), ta_descripcion.getText(), flag);
            superpoderes.add(s);
            JOptionPane.showMessageDialog(this, "Se creo el superpoder exitosamente");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrio un problema al crear el superpoder");
        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        if(jl_personajes.getSelectedIndex()>=0&&jl_superpoderes.getSelectedIndex()>=0)
        {
            DefaultListModel m1= (DefaultListModel) jl_personajes.getModel();
            DefaultListModel m2= (DefaultListModel) jl_superpoderes.getModel();
            
            if(m1.get(jl_personajes.getSelectedIndex())instanceof Heroe)
            {
                if(((Heroe)m1.get(jl_personajes.getSelectedIndex())).getSuperpoderes().size()<3)
                {
                    ((Heroe)m1.get(jl_personajes.getSelectedIndex())).getSuperpoderes().add(((Superpoder)m2.get(jl_superpoderes.getSelectedIndex())));
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "No se le pueden agregar mas superpoderes");
                }
            }
            else if(m1.get(jl_personajes.getSelectedIndex())instanceof Villano)
            {
                if(((Villano)m1.get(jl_personajes.getSelectedIndex())).getSuperpoderes().size()<3)
                {
                    ((Villano)m1.get(jl_personajes.getSelectedIndex())).getSuperpoderes().add(((Superpoder)m2.get(jl_superpoderes.getSelectedIndex())));
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "No se le pueden agregar mas superpoderes");
                }
            }
            JOptionPane.showMessageDialog(this, "se le agrego el superpoder");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No tiene seleccionado el personaje o el superpoder");
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
        if(jl_heroesA.getSelectedIndex()>=0)
        {
            DefaultListModel m= (DefaultListModel) jl_heroesA.getModel();
            if(cb_grupoH.getSelectedItem().toString().equals("Avengers"))
            {
                Heroe temp=((Heroe)m.get(jl_heroesA.getSelectedIndex()));
                Avengers a=new Avengers(temp.getNombre(), temp.getOrigen(), temp.getEdad(), temp.getAltura(), temp.getAtrapados());
                m.remove(jl_heroesA.getSelectedIndex());
                jl_heroesA.setModel(m);
                avengers.add(a);
                for (int i = 0; i < heroes.size(); i++) {
                    if(a.equals(heroes.get(i)))
                    {
                        heroes.remove(i);
                    }
                }
            }
            else if(cb_grupoH.getSelectedItem().toString().equals("Xmen"))
            {
                Heroe temp=((Heroe)m.get(jl_heroesA.getSelectedIndex()));
                Xmen a=new Xmen(temp.getNombre(), temp.getOrigen(), temp.getEdad(), temp.getAltura(), temp.getAtrapados());
                xmen.add(a);
                m.remove(jl_heroesA.getSelectedIndex());
                jl_heroesA.setModel(m);
                for (int i = 0; i < heroes.size(); i++) {
                    if(a.equals(heroes.get(i)))
                    {
                        heroes.remove(i);
                    }
                }
            }
            DefaultListModel mod= new DefaultListModel();
            for (int i = 0; i < avengers.size(); i++) {
                mod.addElement(avengers.get(i));
            }
            for (int i = 0; i < xmen.size(); i++) {
                mod.addElement(xmen.get(i));
            }
            jl_heroes.setModel(mod);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No se selecciono un heroe de la lista");
        }
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        // TODO add your handling code here:
        if(jl_VillanosA.getSelectedIndex()>=0)
        {
            DefaultListModel m= (DefaultListModel) jl_VillanosA.getModel();
            if(cb_grupoV.getSelectedItem().toString().equals("Dark Avengers"))
            {
                Villano temp=((Villano)m.get(jl_VillanosA.getSelectedIndex()));
                DarkAvengers a=new DarkAvengers(temp.getNombre(), temp.getOrigen(), temp.getEdad(), temp.getAltura(), temp.getMuertes(),false);
                darkAvengers.add(a);
                m.remove(jl_VillanosA.getSelectedIndex());
                jl_VillanosA.setModel(m);
                for (int i = 0; i < villanos.size(); i++) {
                    if(a.equals(villanos.get(i)))
                    {
                        villanos.remove(i);
                    }
                }
            }
            else if(cb_grupoV.getSelectedItem().toString().equals("Sinister Six"))
            {
                Villano temp=((Villano)m.get(jl_VillanosA.getSelectedIndex()));
                SinisterSix a=new SinisterSix(temp.getNombre(), temp.getOrigen(), temp.getEdad(), temp.getAltura(), temp.getMuertes(),false);
                sinister.add(a);
                m.remove(jl_VillanosA.getSelectedIndex());
                jl_VillanosA.setModel(m);
                for (int i = 0; i < villanos.size(); i++) {
                    if(a.equals(villanos.get(i)))
                    {
                        villanos.remove(i);
                    }
                }
            }
            DefaultListModel mod= new DefaultListModel();
            for (int i = 0; i < darkAvengers.size(); i++) {
                mod.addElement(darkAvengers.get(i));
            }
            for (int i = 0; i < sinister.size(); i++) {
                mod.addElement(sinister.get(i));
            }
            jl_villano.setModel(mod);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No se selecciono un villano de la lista");
        }
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        // TODO add your handling code here:
        if(jl_carcel.getSelectedIndex()>=0)
        {
            DefaultListModel m=(DefaultListModel)jl_carcel.getModel();
            if(m.get(jl_carcel.getSelectedIndex())instanceof DarkAvengers)
            {
               ((DarkAvengers)m.get(jl_carcel.getSelectedIndex())).setCarcel(false);
               m.remove(jl_carcel.getSelectedIndex());
               jl_carcel.setModel(m);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No se selecciono nungun villano para escapar");
        }
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        if(jl_heroes.getSelectedIndex()>=0 && jl_villano.getSelectedIndex()>=0)
        {
            DefaultListModel m1=(DefaultListModel) jl_heroes.getModel();
            DefaultListModel m2=(DefaultListModel) jl_villano.getModel();
            
            if(m1.get(jl_heroes.getSelectedIndex())instanceof Avengers)
            {
                ((Avengers)m1.get(jl_heroes.getSelectedIndex())).setAtrapados(((Avengers)m1.get(jl_heroes.getSelectedIndex())).getAtrapados()+1);
            }
            else
            {
                ((Xmen)m1.get(jl_heroes.getSelectedIndex())).setAtrapados(((Xmen)m1.get(jl_heroes.getSelectedIndex())).getAtrapados()+1);
            }
            if(m2.get(jl_villano.getSelectedIndex())instanceof DarkAvengers)
            {
                ((DarkAvengers)m2.get(jl_villano.getSelectedIndex())).setCarcel(true);
            }
            else
            {
               ((SinisterSix)m2.get(jl_villano.getSelectedIndex())).setCarcel(true);
            }
            JOptionPane.showMessageDialog(this, "Se envio al Villano a la Carcel");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No se selecciono un heroe o un villano");
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jl_heroesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_heroesMouseClicked
        // TODO add your handling code here:
        if (jl_heroes.getSelectedIndex() >= 0) {
            if (evt.isMetaDown()) {
                popup_heroes.show(evt.getComponent(),
                        evt.getX(), evt.getY());

            }
        }
    }//GEN-LAST:event_jl_heroesMouseClicked

    private void jl_villanoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jl_villanoMouseClicked
        // TODO add your handling code here:
        if (jl_villano.getSelectedIndex() >= 0) {
            if (evt.isMetaDown()) {
                popup_villanos.show(evt.getComponent(),
                        evt.getX(), evt.getY());

            }
        }
    }//GEN-LAST:event_jl_villanoMouseClicked

    private void jmi_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_agregarActionPerformed
        // TODO add your handling code here:
        DefaultTreeModel mod = (DefaultTreeModel)jt_marvel.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode)mod.getRoot();
        DefaultListModel m = (DefaultListModel) jl_heroes.getModel();
        boolean nodo1=false,nodo2=false;
        int temp1=0,temp2=0;
        String grupo="";
        Avengers a=new Avengers();
        Xmen x=new Xmen();
        
        if(m.get(jl_heroes.getSelectedIndex())instanceof Avengers)
        {
            grupo="Avengers";
            a=(Avengers)m.get(jl_heroes.getSelectedIndex());
        }
        else
        {
            grupo="Xmen";
            x=(Xmen)m.get(jl_heroes.getSelectedIndex());
        }
        
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if(raiz.getChildAt(i).equals("Heroe"))
            {
                nodo1=true;
                temp1=i;
                break;
            }
        }
        if(nodo1)
        {
            DefaultMutableTreeNode child=(DefaultMutableTreeNode)raiz.getChildAt(temp1);
            for (int i = 0; i < child.getChildCount(); i++) {
                if(child.getChildAt(i).equals(grupo))
                {
                    nodo2=true;
                    temp2=i;
                    break;
                }
            }
            if(nodo2)
            {
                if(grupo.equals("Avengers"))
                {
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(a);
                    ((DefaultMutableTreeNode)child.getChildAt(temp2)).add(d);
                }
                else
                {
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(x);
                    ((DefaultMutableTreeNode)child.getChildAt(temp2)).add(d);
                }
            }
            else
            {
                if(grupo.equals("Avengers"))
                {
                    DefaultMutableTreeNode g =new DefaultMutableTreeNode("Avengers");
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(a);
                    g.add(d);
                    raiz.add(g);
                }
                else
                {
                    DefaultMutableTreeNode g =new DefaultMutableTreeNode("Xmen");
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(x);
                    g.add(d);
                    raiz.add(g);
                }
            }
        }
        else
        {
            DefaultMutableTreeNode t=new DefaultMutableTreeNode("Heroes");
            if(grupo.equals("Avengers"))
                {
                    DefaultMutableTreeNode g =new DefaultMutableTreeNode("Avengers");
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(a);
                    g.add(d);
                    t.add(g);
                    raiz.add(t);
                }
                else
                {
                    DefaultMutableTreeNode g =new DefaultMutableTreeNode("Xmen");
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(x);
                    g.add(d);
                    t.add(g);
                    raiz.add(t);
                }
        }
        mod.reload();
        
        
    }//GEN-LAST:event_jmi_agregarActionPerformed

    private void jmi_agregarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_agregarVActionPerformed
        // TODO add your handling code here:
        DefaultTreeModel mod = (DefaultTreeModel)jt_marvel.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode)mod.getRoot();
        DefaultListModel m = (DefaultListModel) jl_villano.getModel();
        boolean nodo1=false,nodo2=false;
        int temp1=0,temp2=0;
        String grupo="";
        DarkAvengers a=new DarkAvengers();
        SinisterSix x=new SinisterSix();
        
        if(m.get(jl_villano.getSelectedIndex())instanceof DarkAvengers)
        {
            grupo="Dark Avengers";
            a=(DarkAvengers)m.get(jl_villano.getSelectedIndex());
        }
        else
        {
            grupo="Sinister Six";
            x=(SinisterSix)m.get(jl_villano.getSelectedIndex());
        }
        
        for (int i = 0; i < raiz.getChildCount(); i++) {
            if(raiz.getChildAt(i).equals("Villanos"))
            {
                nodo1=true;
                temp1=i;
                break;
            }
        }
        if(nodo1)
        {
            DefaultMutableTreeNode child=(DefaultMutableTreeNode)raiz.getChildAt(temp1);
            for (int i = 0; i < child.getChildCount(); i++) {
                if(child.getChildAt(i).equals(grupo))
                {
                    nodo2=true;
                    temp2=i;
                    break;
                }
            }
            if(nodo2)
            {
                if(grupo.equals("Dark Avengers"))
                {
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(a);
                    ((DefaultMutableTreeNode)child.getChildAt(temp2)).add(d);
                }
                else
                {
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(x);
                    ((DefaultMutableTreeNode)child.getChildAt(temp2)).add(d);
                }
            }
            else
            {
                if(grupo.equals("Dark Avengers"))
                {
                    DefaultMutableTreeNode g =new DefaultMutableTreeNode("Dark Avengers");
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(a);
                    g.add(d);
                    raiz.add(g);
                }
                else
                {
                    DefaultMutableTreeNode g =new DefaultMutableTreeNode("Sinister Six");
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(x);
                    g.add(d);
                    raiz.add(g);
                }
            }
        }
        else
        {
            DefaultMutableTreeNode t=new DefaultMutableTreeNode("Villanos");
            if(grupo.equals("Dark Avengers"))
                {
                    DefaultMutableTreeNode g =new DefaultMutableTreeNode("Dark Avengers");
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(a);
                    g.add(d);
                    t.add(g);
                    raiz.add(t);
                }
                else
                {
                    DefaultMutableTreeNode g =new DefaultMutableTreeNode("Sinister Six");
                    DefaultMutableTreeNode d = new DefaultMutableTreeNode(x);
                    g.add(d);
                    t.add(g);
                    raiz.add(t);
                }
        }
        mod.reload();
    }//GEN-LAST:event_jmi_agregarVActionPerformed

    private void jmi_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarActionPerformed
        // TODO add your handling code here:
        DefaultListModel m = (DefaultListModel)jl_heroes.getModel();
        if(m.get(jl_heroes.getSelectedIndex())instanceof Avengers)
        {
            Avengers a=((Avengers)m.get(jl_heroes.getSelectedIndex()));
            for (int i = 0; i < avengers.size(); i++) {
                if(a.equals(avengers.get(i)))
                {
                    avengers.remove(i);
                }
            }
        }
        else
        {
            Xmen a=((Xmen)m.get(jl_heroes.getSelectedIndex()));
            for (int i = 0; i < xmen.size(); i++) {
                if(a.equals(xmen.get(i)))
                {
                    xmen.remove(i);
                }
            }
        }
        m.remove(jl_heroes.getSelectedIndex());
        jl_heroes.setModel(m);
    }//GEN-LAST:event_jmi_eliminarActionPerformed

    private void jmi_eliminarVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_eliminarVActionPerformed
        // TODO add your handling code here:
        DefaultListModel m = (DefaultListModel)jl_villano.getModel();
        if(m.get(jl_villano.getSelectedIndex())instanceof DarkAvengers)
        {
            DarkAvengers a=((DarkAvengers)m.get(jl_villano.getSelectedIndex()));
            for (int i = 0; i < darkAvengers.size(); i++) {
                if(a.equals(darkAvengers.get(i)))
                {
                    darkAvengers.remove(i);
                }
            }
        }
        else
        {
            SinisterSix a=((SinisterSix)m.get(jl_villano.getSelectedIndex()));
            for (int i = 0; i < sinister.size(); i++) {
                if(a.equals(sinister.get(i)))
                {
                    sinister.remove(i);
                }
            }
        }
        m.remove(jl_villano.getSelectedIndex());
        jl_villano.setModel(m);
    }//GEN-LAST:event_jmi_eliminarVActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        DefaultTreeModel mod = (DefaultTreeModel)jt_marvel.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode)mod.getRoot();
        DefaultListModel m1=(DefaultListModel)jl_heroes.getModel();
        DefaultListModel m2=(DefaultListModel)jl_villano.getModel();
        boolean nodo1=false,nodo2=false;
        int temp1=0,temp2=0;
        String grupo="";
        Avengers a=new Avengers();
        Xmen x=new Xmen();
        DarkAvengers d=new DarkAvengers();
        SinisterSix s=new SinisterSix();
        if(m1.isEmpty()&&m2.isEmpty())
        {
            for (int i = 0; i < avengers.size(); i++) {
                m1.addElement(avengers.get(i));
            }
            for (int i = 0; i < xmen.size(); i++) {
                m1.addElement(xmen.get(i));
            }
            jl_heroes.setModel(m1);
            for (int i = 0; i < darkAvengers.size(); i++) {
                m2.addElement(darkAvengers.get(i));
            }
            for (int i = 0; i < sinister.size(); i++) {
                m2.addElement(sinister.get(i));
            }
            jl_villano.setModel(m2);
            DefaultMutableTreeNode root=new DefaultMutableTreeNode("Marvel");
            DefaultTreeModel modelo=new DefaultTreeModel(root);
            jt_marvel.setModel(modelo);
            modelo.reload();
        }
        else
        {
            for (int i = 0; i < m2.size(); i++) {
                if(m2.get(i)instanceof DarkAvengers)
                {
                    grupo="Dark Avengers";
                    d=(DarkAvengers)m2.get(i);
                }
                else
                {
                    grupo="Sinister Six";
                    s=(SinisterSix)m2.get(i);
                }

                for (int j = 0; j < raiz.getChildCount(); j++) {
                    if(raiz.getChildAt(j).equals("Villanos"))
                    {
                        nodo1=true;
                        temp1=j;
                        break;
                    }
                }
                if(nodo1)
                {
                    DefaultMutableTreeNode child=(DefaultMutableTreeNode)raiz.getChildAt(temp1);
                    for (int j = 0; j < child.getChildCount(); j++) {
                        if(child.getChildAt(j).equals(grupo))
                        {
                            nodo2=true;
                            temp2=j;
                            break;
                        }
                    }
                    if(nodo2)
                    {
                        if(grupo.equals("Dark Avengers"))
                        {
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(d);
                            ((DefaultMutableTreeNode)child.getChildAt(temp2)).add(n);
                        }
                        else
                        {
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(s);
                            ((DefaultMutableTreeNode)child.getChildAt(temp2)).add(n);
                        }
                    }
                    else
                    {
                        if(grupo.equals("Dark Avengers"))
                        {
                            DefaultMutableTreeNode g =new DefaultMutableTreeNode("Dark Avengers");
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(d);
                            g.add(n);
                            raiz.add(g);
                        }
                        else
                        {
                            DefaultMutableTreeNode g =new DefaultMutableTreeNode("Sinister Six");
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(s);
                            g.add(n);
                            raiz.add(g);
                        }
                    }
                }
                else
                {
                    DefaultMutableTreeNode t=new DefaultMutableTreeNode("Villanos");
                    if(grupo.equals("Dark Avengers"))
                        {
                            DefaultMutableTreeNode g =new DefaultMutableTreeNode("Dark Avengers");
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(d);
                            g.add(n);
                            t.add(g);
                            raiz.add(t);
                        }
                        else
                        {
                            DefaultMutableTreeNode g =new DefaultMutableTreeNode("Sinister Six");
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(s);
                            g.add(n);
                            t.add(g);
                            raiz.add(t);
                        }
                }
            }
            for (int i = 0; i < m1.size(); i++) {
                if(m1.get(i)instanceof Avengers)
                {
                    grupo="Avengers";
                    a=(Avengers)m1.get(i);
                }
                else
                {
                    grupo="Xmen";
                    x=(Xmen)m1.get(i);
                }

                for (int j = 0; j < raiz.getChildCount();j++) {
                    if(raiz.getChildAt(j).equals("Heroe"))
                    {
                        nodo1=true;
                        temp1=j;
                        break;
                    }
                }
                if(nodo1)
                {
                    DefaultMutableTreeNode child=(DefaultMutableTreeNode)raiz.getChildAt(temp1);
                    for (int j = 0; j < child.getChildCount(); j++) {
                        if(child.getChildAt(i).equals(grupo))
                        {
                            nodo2=true;
                            temp2=j;
                            break;
                        }
                    }
                    if(nodo2)
                    {
                        if(grupo.equals("Avengers"))
                        {
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(a);
                            ((DefaultMutableTreeNode)child.getChildAt(temp2)).add(n);
                        }
                        else
                        {
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(x);
                            ((DefaultMutableTreeNode)child.getChildAt(temp2)).add(n);
                        }
                    }
                    else
                    {
                        if(grupo.equals("Avengers"))
                        {
                            DefaultMutableTreeNode g =new DefaultMutableTreeNode("Avengers");
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(a);
                            g.add(n);
                            raiz.add(g);
                        }
                        else
                        {
                            DefaultMutableTreeNode g =new DefaultMutableTreeNode("Xmen");
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(x);
                            g.add(n);
                            raiz.add(g);
                        }
                    }
                }
                else
                {
                    DefaultMutableTreeNode t=new DefaultMutableTreeNode("Heroes");
                    if(grupo.equals("Avengers"))
                        {
                            DefaultMutableTreeNode g =new DefaultMutableTreeNode("Avengers");
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(a);
                            g.add(n);
                            t.add(g);
                            raiz.add(t);
                        }
                        else
                        {
                            DefaultMutableTreeNode g =new DefaultMutableTreeNode("Xmen");
                            DefaultMutableTreeNode n = new DefaultMutableTreeNode(x);
                            g.add(n);
                            t.add(g);
                            raiz.add(t);
                        }
                    
                }
            }
            m1.removeAllElements();
            m2.removeAllElements();
            jl_heroes.setModel(m1);
            jl_villano.setModel(m2);
           mod.reload();
        }
    }//GEN-LAST:event_jButton3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Marvel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Marvel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Marvel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Marvel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Marvel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cb_grupoH;
    private javax.swing.JComboBox<String> cb_grupoV;
    private javax.swing.JComboBox<String> cb_tipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JDialog jd_AsignarH;
    private javax.swing.JDialog jd_AsignarSuper;
    private javax.swing.JDialog jd_AsignarV;
    private javax.swing.JDialog jd_Carcel;
    private javax.swing.JDialog jd_Crear;
    private javax.swing.JDialog jd_Interfaz;
    private javax.swing.JDialog jd_Superpoder;
    private javax.swing.JList<String> jl_VillanosA;
    private javax.swing.JList<String> jl_carcel;
    private javax.swing.JList<String> jl_heroes;
    private javax.swing.JList<String> jl_heroesA;
    private javax.swing.JList<String> jl_personajes;
    private javax.swing.JList<String> jl_superpoderes;
    private javax.swing.JList<String> jl_villano;
    private javax.swing.JMenuItem jmi_agregar;
    private javax.swing.JMenuItem jmi_agregarV;
    private javax.swing.JMenuItem jmi_eliminar;
    private javax.swing.JMenuItem jmi_eliminarV;
    private javax.swing.JTree jt_marvel;
    private javax.swing.ButtonGroup mortal;
    private javax.swing.JPasswordField pf_contra;
    private javax.swing.JPopupMenu popup_heroes;
    private javax.swing.JPopupMenu popup_villanos;
    private javax.swing.JRadioButton rb_No;
    private javax.swing.JRadioButton rb_Si;
    private javax.swing.JSpinner sp_altura;
    private javax.swing.JSpinner sp_edad;
    private javax.swing.JSpinner sp_nivel;
    private javax.swing.JTextArea ta_descripcion;
    private javax.swing.JTextField tf_nombre;
    private javax.swing.JTextField tf_origen;
    private javax.swing.JTextField tf_user;
    // End of variables declaration//GEN-END:variables
    String user="stanlee",pass="spiderman99";
    ArrayList<Heroe> heroes=new ArrayList<>();
    ArrayList<Villano> villanos=new ArrayList<>();
    ArrayList<Avengers> avengers=new ArrayList<>();
    ArrayList<Xmen> xmen=new ArrayList<>();
    ArrayList<DarkAvengers> darkAvengers=new ArrayList<>();
    ArrayList<SinisterSix> sinister=new ArrayList<>();
    ArrayList<Superpoder> superpoderes=new ArrayList<>();
}
